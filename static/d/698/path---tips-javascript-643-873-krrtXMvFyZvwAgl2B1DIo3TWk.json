{"data":{"site":{"siteMetadata":{"title":"Alex Gatz","author":"Alex Gatz"}},"markdownRemark":{"id":"5eae601c-21c8-5f39-89ac-9bb2c7fa4e46","excerpt":"Τι είναι το javascript?Η JavaScript (JS) είναι διερμηνευμένη γλώσσα προγραμματισμού για ηλεκτρονικούς υπολογιστές. Αρχικά αποτέλεσε μέρος της υλοποίησης των…","html":"<div style=\"position: relative; border-radius: 0.5em; box-shadow: rgba(79, 90, 109, 0.3) 0px 5px 25px 0px; overflow: hidden; margin-bottom: 1.5em; width: 100%; padding: 0; max-width: 590px;\">\n<img src=\"./bg.jpg\" /></div>\n<hr>\n<h2>Τι είναι το javascript?</h2>\n<blockquote>\n<p>Η JavaScript (JS) είναι διερμηνευμένη γλώσσα προγραμματισμού για ηλεκτρονικούς υπολογιστές. Αρχικά αποτέλεσε μέρος της υλοποίησης των φυλλομετρητών Ιστού, ώστε τα σενάρια από την πλευρά του πελάτη (client-side scripts) να μπορούν να επικοινωνούν με τον χρήστη, να ανταλλάσσουν δεδομένα ασύγχρονα και να αλλάζουν δυναμικά το περιεχόμενο του εγγράφου που εμφανίζεται.</p>\n</blockquote>\n<h2>Τιμές: truthy και falsy:</h2>\n<p>Οι περισσότεροι νέοι προγραμματιστές JavaScript μπορεί να γνωρίζουν τους ενσωματωμένους τύπους δεδομένων στο JavaScript. Ωστόσο, δεν είναι δυνατόν πολλοί να γνωρίζουν την ταξινόμηση truthy και τις αξίες της JavaScript . falsy</p>\n<p>Οποτεδήποτε το JavaScript αναμένει μια booleanτιμή, μια truthy τιμή θα συμπεριφέρεται σαν true, ενώ μια falsy τιμή λειτουργεί όπως false.</p>\n<p>Αυτές είναι οι πλαστές τιμές :</p>\n<p>0\n-0\nnull\nundefined\n”\nNaN\nfalse</p>\n<p>Όπως μπορείτε να δείτε, ακόμη και μια κενή συμβολοσειρά θεωρείται παραπλανητική αξία. Όλες οι άλλες τιμές, πέραν των προαναφερθέντων, είναι τραγικές τιμές.</p>\n<h2>Μετατροπή τύπου: Αριθμός και συμβολοσειρά.</h2>\n<p>Ένα από τα πιο κοινά πράγματα που μπορείτε να βρείτε τον εαυτό σας να κάνει σε JavaScript χρησιμοποιεί αριθμητικούς τελεστές: +, -, *, /. Αυτοί οι χειριστές περιμένουν τελεστές που είναι αριθμοί. Έτσι, όταν οποιοσδήποτε από τους τελεστές δεν είναι a number, η JavaScript σιωπά σιωπηρά σε a number. Αλλά υπάρχουν στιγμές που δεν μπορείτε να πάρετε το αποτέλεσμα που αναμένετε, ειδικά όταν χρησιμοποιείτε τον +χειριστή. Αυτό είναι σημαντικό επειδή ο +χειριστής χρησιμοποιείται επίσης για την αλληλοεξαρτώμενη συμβολοσειρά .</p>\n<hr>","frontmatter":{"title":"Βασικά Javascript Tips","date":"May 01, 2015","description":"javascript tips"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/tips-javascript/","previous":null,"next":{"fields":{"slug":"/tips-grep/"},"frontmatter":{"title":"Βασικά tips για το grep"}}}}